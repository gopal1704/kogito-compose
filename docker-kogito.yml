services:
  # --- Kafka (single-node KRaft) ---

  kafka:
    image: bitnami/kafka:latest
    environment:
     - KAFKA_ENABLE_KRAFT=yes
     - KAFKA_CFG_PROCESS_ROLES=broker,controller
     - KAFKA_CFG_NODE_ID=1
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
     - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
     # Cluster ID can be any 22-char base64-ish string; this example works for dev
     - KAFKA_KRAFT_CLUSTER_ID=4LZ6Z8TGQ9K9ILX7N6F1B2
    ports:
     - "9092:9092"
    healthcheck:
     test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list > /dev/null 2>&1"]
     interval: 10s
     timeout: 5s
     retries: 30

  # --- PostgreSQL for Data Index storage ---
  postgres:
    image: postgres:16
    environment:
      - POSTGRES_DB=kogito
      - POSTGRES_USER=kogito
      - POSTGRES_PASSWORD=kogito
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kogito -d kogito"]
      interval: 5s
      timeout: 3s
      retries: 30

  # --- Kogito Data Index (PostgreSQL-backed) ---
  data-index:
    image: quay.io/kiegroup/kogito-data-index-postgresql:1.44.1
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postgres:5432/kogito
      - QUARKUS_DATASOURCE_USERNAME=kogito
      - QUARKUS_DATASOURCE_PASSWORD=kogito
      - QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION=update
      - QUARKUS_HTTP_CORS=true
      - QUARKUS_HTTP_CORS_ORIGINS=http://localhost:8180
      - QUARKUS_HTTP_CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - QUARKUS_HTTP_CORS_HEADERS=accept,authorization,content-type,x-requested-with
      - QUARKUS_HTTP_PORT=8080
      - KOGITO_DATA_INDEX_ADDON_EVENTS=true
      - KOGITO_DATA_INDEX_ADDON_PROCESSES=true
      - KOGITO_DATA_INDEX_ADDON_DECISIONS=true   # only if you run DMN/decisions
      - KOGITO_DATA_INDEX_ADDON_JOBS=true  
    ports:
      - "8080:8080"

  # --- Kogito Management Console (Admin/monitoring UI) ---
  management-console:
    image: quay.io/kiegroup/kogito-management-console:1.44.1
    depends_on:
      data-index:
        condition: service_started
    environment:
      # Point the console to Data Index GraphQL
      - KOGITO_DATAINDEX_HTTP_URL=http://localhost:8080/graphql
      - KOGITO_AUTH_ENABLED=true
      - KOGITO_CONSOLES_KEYCLOAK_CONFIG_REALM=kogito
      - KOGITO_CONSOLES_KEYCLOAK_CONFIG_URL=http://localhost:8111/auth
      - KOGITO_CONSOLES_KEYCLOAK_CONFIG_CLIENT_ID=kogito-console-quarkus
      - KOGITO_CONSOLES_KEYCLOAK_CONFIG_HEALTH_CHECK_URL=http://localhost:8111/auth/realms/kogito/.well-known/openid-configuration
    ports:
      - "8180:8080"
    volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data
    
  keycloak:
   image: quay.io/keycloak/keycloak:13.0.1
   environment:
     KEYCLOAK_USER: admin
     KEYCLOAK_PASSWORD: admin
     DB_VENDOR: h2
   ports:
     - "8111:8080"
   healthcheck:
    test: ["CMD-SHELL", "curl -fsS http://localhost:8080/realms/kogito/.well-known/openid-configuration >/dev/null || exit 1"]
    interval: 10s
    timeout: 5s
    retries: 30
   volumes:
      - keycloak_data:/opt/jboss/keycloak/standalone/data

  kogito-demo-app:
    image: kogito-demo-app:latest   
    container_name: kogito-demo-app
    ports:
      - "8086:8080"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
volumes:
  keycloak_data: